[fastqc]
fastqc = /nfs2/software/bin/fastqc
outdir = dynamic_value
threads = 3
adapters = /nfs2/database/fastqc_support/fastqc.adapter.list
# a directory to be used for temporary files written
tmpdir = ${outdir}
fastqs = dynamic_value1 dynamic_value2

[trimmomatic]
java = /usr/bin/java
trimmomatic = /nfs2/software/Trimmomatic-0.36/trimmomatic-0.36.jar
threads = 10
mode = PE
fq1 = dynamic_value
fq2 = dynamic_value
trimmed_fq1 = dynamic_value
unpaired_fq1 = dynamic_value
trimmed_fq2 = dynamic_value
unpaired_fq2 = dynamic_value
adapter_fasta = /nfs2/software/Trimmomatic-0.36/adapters/all-PE.fasta
seed_mismatches = 2
head_crop = 15
palindrome_clip_threshold = 30
simple_clip_threshold = 10
leading = 3
trailing = 3
sliding_window_size = 4
sliding_window_quality = 15
min_length = 50

[FastqToSam]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
tool = FastqToSam
fq = dynamic_value
fq2 = dynamic_value
out = dynamic_value
sample_name = dynamic_value
PL = illumina
SEQUENCING_CENTER = illumina

[bwa_mem]
bwa = /nfs2/software/bwa-0.7.17/bwa
threads = 16
verbosity = 3
# Mark shorter split hits as secondary (for Picard compatibility).
-M = yes
# Use soft clipping CIGAR operation for supplementary alignments
-Y = yes
genome_fasta = /nfs2/database/1_human_reference/hg19/ucsc.hg19.fasta
fq1 = dynamic_value
fq2 = dynamic_value
sample = dynamic_value
out = dynamic_value

[samtools_index]
samtools = /nfs2/software/bin/samtools
threads = 6
bam = dynamic_value

[sam2bam]
samtools = /nfs2/software/bin/samtools
threads = 6
sam = dynamic_value
out = dynamic_value

[MergeBamAlignment]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
tool = MergeBamAlignment
ALIGNED = dynamic_value
UNMAPPED = dynamic_value
out = dynamic_value
genome_fasta = ${bwa_mem:genome_fasta}
VALIDATION_STRINGENCY = SILENT
EXPECTED_ORIENTATIONS = FR
ATTRIBUTES_TO_RETAIN = X0
SORT_ORDER = unsorted
IS_BISULFITE_SEQUENCE = false
ALIGNED_READS_ONLY = false
MAX_RECORDS_IN_RAM = 2000000
ADD_MATE_CIGAR = true
MAX_INSERTIONS_OR_DELETIONS = -1
PRIMARY_ALIGNMENT_STRATEGY = MostDistant
UNMAPPED_READ_STRATEGY = COPY_TO_TAG
UNMAP_CONTAMINANT_READS = true
INCLUDE_SECONDARY_ALIGNMENTS = true

[MarkDuplicates]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
tool = MarkDuplicates
input = dynamic
output = dynamic
metrics = dynamic
VALIDATION_STRINGENCY = SILENT
CREATE_INDEX = true
# For the patterned flowcell models, 2500 is moreappropriate, 否则设为100
# NovaSeq6000 和Hiseq Xten和HiSeq 3000和HiSeq 4000
OPTICAL_DUPLICATE_PIXEL_DISTANCE = 2500
ASSUME_SORT_ORDER = queryname

[MarkDuplicatesSpark]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = MarkDuplicatesSpark
input = dynamic
output = dynamic
metrics = dynamic
CREATE_INDEX = true
# For the patterned flowcell models, 2500 is moreappropriate
OPTICAL_DUPLICATE_PIXEL_DISTANCE = 2500
conf = 'spark.executor.cores=6'

[SortAndFixTags]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
input = dynamic
output = dynamic
genome_fasta = ${bwa_mem:genome_fasta}
CREATE_INDEX = true
CREATE_MD5_FILE = true

[FixTags]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
input = dynamic
output = dynamic
genome_fasta = ${bwa_mem:genome_fasta}
CREATE_INDEX = true
CREATE_MD5_FILE = true

[BaseRecalibrator]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = BaseRecalibrator
input = dynamic_value
output = dynamic_value
genome_fasta = ${bwa_mem:genome_fasta}
# 多个set时, 用空格分隔
known_sites = /nfs2/database/1_human_reference/hg19/dbsnp_138.hg19.vcf /nfs2/database/1_human_reference/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf
use-original-qualities = true
intervals = dynamic_value
# 可以使用CreateSequeGroupingTSV.py脚本获得下面的文件
seq_grouping_file = /data/users/dqgu/mytmp/test/sequence_grouping.txt

[GatherBQSRReports]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = GatherBQSRReports
report_list = dynamic_value
output = dynamic_value

[ApplyBQSR]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = ApplyBQSR
genome_fasta = ${bwa_mem:genome_fasta}
use-original-qualities = true
create-output-bam-md5 = true
input = dynamic_value
output = dynamic_value
intervals = dynamic_value
bqsr-recal-file = dynamic_value
static-quantized-quals = 10 20 30
# 可以使用CreateSequeGroupingTSV.py脚本获得下面的文件
seq_grouping_file = /data/users/dqgu/mytmp/test/sequence_grouping_with_unmapped.txt

[GatherBamFiles]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = GatherBamFiles
bam_list = dynamic_value
output = dynamic_value
# 当前发现下面参数如果设置为true，索引失败, 可以用samtools index
CREATE_INDEX = false
CREATE_MD5_FILE = true
genome_fasta = ${bwa_mem:genome_fasta}

[MuTect2]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = Mutect2
genome_fasta = ${bwa_mem:genome_fasta}
germline-resource = /nfs2/database/GermlineResource/af-only-gnomad.hg19.vcf.gz
intervals = /nfs2/database/1_human_reference/hg19/truseq-exome-targeted-regions-manifest-v1-2.bed
downsampling-stride = 20
max-reads-per-alignment-start = 6
max-suspicious-reads-per-alignment-start = 6
mitochondria-mode = false
# 如果没有下面的文件, 则不要给panel-of-normals赋值, 最好用CreateSomaticPanelOfNormals获得该输入文件
# Panel of Normals (PON)  What all PONs have in common is that
# (1) they are made from normal samples derived from healthy tissue that have no somatic alterations)
# (2) their main purpose is to capture recurrent technical artifacts in order to improve the variant calling analysis.
panel-of-normals =
# File to which assembled haplotypes should be written
bam-output = dynamic
bam-writer-type = CALLED_HAPLOTYPES
output = dynamic
tumour-sample = dynamic
normal-sample = dynamic
tumour_bam = dynamic
normal_bam = dynamic
f1r2-tar-gz = dynamic

[SplitIntervals]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = SplitIntervals
genome_fasta = ${bwa_mem:genome_fasta}
intervals = /nfs2/database/1_human_reference/hg19/truseq-exome-targeted-regions-manifest-v1-2.bed
scatter-count = 10
output = dynamic

[GetPileupSummaries]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = GetPileupSummaries
genome_fasta = ${bwa_mem:genome_fasta}
#The small_exac_common_3.hg38.vcf.gz is used for estimating cross-sample contamination.
vcf_contamination = /nfs2/database/GermlineResource/small_exac_common_3_b37_addchr.vcf.gz
bam = dynamic
output = dynamic

[MergeVcfs]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = MergeVcfs
input = dynamic
output = dynamic

[SortSam]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = SortSam
SORT_ORDER = coordinate
VALIDATION_STRINGENCY = LENIENT
input = dynamic
output  = dynamic

[BuildBamIndex]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = BuildBamIndex
VALIDATION_STRINGENCY = LENIENT
input = dynamic

[MergeMutectStats]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = MergeMutectStats
stats = dynamic_list
output = dynamic

[GatherPileupSummaries]
# 该部分没有用，因为对每个样本只进行了一次getpileup
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = GatherPileupSummaries
sequence-dictionary = /nfs2/database/1_human_reference/hg19/ucsc.hg19.dict
input = dynamic
output = dynamic

[LearnReadOrientationModel]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = LearnReadOrientationModel
input = dynamic_list
output = dynamic

[CalculateContamination]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = CalculateContamination
tumor_pileups = dynamic
output = dynamic
tumor-segmentation = dynamic_output
normal_pileups = dynamic

[FilterMutectCalls]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = FilterMutectCalls
genome_fasta = ${bwa_mem:genome_fasta}
variant = dynamic
output = dynamic
contamination-table = dynamic
tumor-segmentation = dynamic
ob-priors = dynamic
stats = dynamic
filtering-stats = dynamic

[FilterAlignmentArtifacts]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = FilterAlignmentArtifacts
variant = dynamic
bam = dynamic
#use gatk BwaMemIndexImageCreator create the following file
bwa-mem-index-image = /nfs2/database/1_human_reference/hg19/ucsc.hg19.fasta.img
output = dynamic

[HaplotypeCaller]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = HaplotypeCaller
genome_fasta = ${bwa_mem:genome_fasta}
emit-ref-confidence = GVCF
bam-writer-type = CALLED_HAPLOTYPES
intervals = dynamic
bamout = dynamic
input = dynamic
output = dynamic
annotation-group = StandardAnnotation AS_StandardAnnotation StandardHCAnnotation
contamination = 0

