[fastqc]
fastqc = /nfs2/software/bin/fastqc
outdir = dynamic_value
threads = 3
adapters = /nfs2/database/fastqc_support/fastqc.adapter.list
# a directory to be used for temporary files written
tmpdir = ${outdir}
fastqs = dynamic_value1 dynamic_value2

[trimmomatic]
java = /usr/bin/java
trimmomatic = /nfs2/software/Trimmomatic-0.36/trimmomatic-0.36.jar
threads = 10
mode = PE
fq1 = dynamic_value
fq2 = dynamic_value
trimmed_fq1 = dynamic_value
unpaired_fq1 = dynamic_value
trimmed_fq2 = dynamic_value
unpaired_fq2 = dynamic_value
adapter_fasta = /nfs2/software/Trimmomatic-0.36/adapters/all-PE.fasta
seed_mismatches = 2
head_crop = 15
palindrome_clip_threshold = 30
simple_clip_threshold = 10
leading = 3
trailing = 3
sliding_window_size = 4
sliding_window_quality = 15
min_length = 50


[star_index]
star = /nfs2/software/STAR-2.7.0f/bin/Linux_x86_64/STAR
runThreadN = 10
;genomeDir = /nfs2/database/gencode_v29/primary_assembly.star2.7_index
genomeDir = /nfs2/software/star-fusion/1.6.0/refgenome/GRCh38_gencode_v29_CTAT_lib_Mar272019.plug-n-play/ctat_genome_lib_build_dir/ref_genome.fa.star.idx/
;genomeFastaFiles = /nfs2/database/gencode_v29/GRCh38.p12.genome.fa
;genomeFastaFiles = /nfs2/database/gencode_v29/GRCh38.primary_assembly.genome.fa
genomeFastaFiles = /nfs2/software/star-fusion/1.6.0/refgenome/GRCh38_gencode_v29_CTAT_lib_Mar272019.plug-n-play/ctat_genome_lib_build_dir/ref_genome.fa
;sjdbGTFfile = /nfs2/database/gencode_v29/gencode.v29.chr_patch_hapl_scaff.annotation.gtf
sjdbGTFfile = /nfs2/software/star-fusion/1.6.0/refgenome/GRCh38_gencode_v29_CTAT_lib_Mar272019.plug-n-play/ctat_genome_lib_build_dir/ref_annot.gtf
# read length-1
sjdbOverhang = 100

[star_align]
# https://github.com/alexdobin/STAR/blob/master/source/parametersDefault
star = ${star_index:star}
runThreadN = 10
genomeDir = ${star_index:genomeDir}
readFilesIn =  dynamic_value
outFileNamePrefix = dynamic_value
outSAMtype = BAM SortedByCoordinate
outSAMunmapped = Within
twopassMode = Basic
# GeneCounts count reads per gene
# TranscriptomeSAM output SAM/BAM alignments to transcriptome into a separate file
;quantMode = TranscriptomeSAM
quantMode = GeneCounts
# 最多允许一个reads被匹配到多少个地方,官网默认为10
outFilterMultimapNmax = 20
# 在未有注释的junction区域，最低允许突出多少个bp的单链序列
alignSJoverhangMin = 8
alignMatesGapMax = 100000
alignIntronMax = 100000
alignSJstitchMismatchNmax = 5 -1 5 5
# 在有注释的junction区域，最低允许突出多少个bp的单链序列
alignSJDBoverhangMin = 10
# 输出融合转录本，20代表比对的最少的碱基数目， if ==0, no chimeric output， 官网默认为0
chimSegmentMin = 12
chimOutType = Junctions
chimJunctionOverhangMin = 12
chimMultimapScoreRange = 10
chimSegmentReadGapMax = 3
chimMultimapNmax = 10
chimNonchimScoreDropMin = 10
chimOutJunctionFormat = 1
peOverlapNbasesMin = 12
peOverlapMMp = 0.1
# 相对paired read长度可以允许的mismatch数目，如果read长度为100，数值设定为0.04，则会过滤掉100*2*0.04=8个以上的数据
outFilterMismatchNoverLmax = 0.04
outFilterMatchNminOverLread = 0.66
# 减少伪junction的几率
outFilterType = BySJout
# 在bam 中输出 XS tag
outSAMstrandField = intronMotif
# ID:{prefix} SM:{prefix} PL:{platform}
outSAMattrRGline =  ID:prefix SM:prefix PL:platform
# 控制 Max memory needed for sorting = 40172480942
limitBAMsortRAM = 35000000000
limitIObufferSize = 100000000
# Recommended value: >(2*(LengthMate1+LengthMate2+100)*outFilterMultimapNmax
limitOutSAMoneReadBytes = 160000
#  0 may be required by some downstream software, such as Cufflinks or StringTie.
outSAMattrIHstart = 0

[star_fusion]
;STAR-Fusion是利用STAR比对的融合输出结果来检测融合转录本的软件包，主要包括SATR比对，STAR-Fusion.predict，STAR-Fusion.filter三个步骤：
;
;先将reads通过star比对到参考基因组，筛选出split reads ( 含有两个基因融合断点的reads， 流程图中S=3即为Split reads的数目 )和discordant pair (比对到不同基因上的reads，图中J=2即为Discordant pair的数目)作为候选的融合基因序列。
;将候选融合基因与参考基因组注释文件比对，根据overlap预测融合基因。根据最少reads支持准则以及利用校验工具FusionInspector进行进一步的矫正分析的结果。
;
;1）至少有一对含有剪切位点注释的JunctionReads，并且 JunctionReads与SpanningFrags(Discordant pair)的总数至少要大于等于二。
;2）如果融合的基因的reads的支持只有JunctionReads，即 SpanningFrags=0的情况，那么对于双端测序的reads至少有25个碱基可以比 对到融合基因断点的两端。
;3）如果融合基因的融合的断点位置与已经注释的外显子的剪位点不一致，则至少需要三对JunctionReads。
;
;过滤预测结果，去除假阳性。
;1） 如果融合基因的断点没有注释，软件根据占主导地位断点对比对窗口中reads支持最多且相差距离在+/-5个碱基内的主要断点合并成一个融合预测的结果。
;2）如果融合的基因的reads只支持split-read，那么对于双端测序的reads至少需要25 个碱基比对到融合基因断点的两端。对于单端的read是非必须的，因为不同的reads可以在任意一端比对上。
;3） 如果一对融合基因有多个融合的转录本，过滤掉低reads的isoforms。
;4）利用blast将两个序列相似的融合基因(sequence-similar fusion pairs)进行过滤（参数:E<=10-3）
;5）过滤掉配对混乱的融合基因对(promiscuous fusion partners)。即将在一个样品中一个基因和多个基因融合的结果过滤。
;
;作者：shannonnana ;来源：简书
star_fusion = /nfs2/software/star-fusion/1.6.0/STAR-Fusion --STAR_PATH /nfs2/software/STAR-2.7.0f/bin/Linux_x86_64/STAR
genome_lib_dir = /nfs2/software/star-fusion/1.6.0/refgenome/GRCh38_gencode_v29_CTAT_lib_Mar272019.plug-n-play/ctat_genome_lib_build_dir
Chimeric_out_junction = dynamic_value
outdir = dynamic_value
CPU = 5
FusionInspector = inspect
examine_coding_effect = yes
extract_fusion_reads = yes
left_fq = dynamic_value
right_fq = dynamic_value

[arriba]
arriba = /nfs2/software/arriba/v1.2.0/arriba
x = dynamic_value
g = ${star_index:sjdbGTFfile}
a = ${star_index:genomeFastaFiles}
b = /nfs2/software/arriba/v1.1.0/database/blacklist_hg38_GRCh38_2018-11-04.tsv.gz
o = dynamic_value
discarded = dynamic_value
strandness = auto
assemble_transcript = yes
translate_pipetide = yes
known_fusion =

[samtools_index]
samtools = /nfs2/software/bin/samtools
bam = dynamic_value

[salmon_index]
salmon = /nfs2/software/bin/salmon
;transcript_fasta = /nfs2/database/gencode_v29/gencode.v29.chr_patch_hapl_scaff.transcripts.fa
transcript_fasta = /nfs2/database/gencode_v29/gencode.v29.primary_assembly.transcripts.fa
index_prefix = /nfs2/database/gencode_v29/primary_assembly.salmon_index/
kmer = 31

[salmon_quant]
salmon = /nfs2/software/bin/salmon
index = ${salmon_index:index_prefix}
mode = PE
fq1 = dynamic_value
fq2 = dynamic_value
fq = dynamic_value
out_prefix = dynamic_value
threads = 10
transcript2gene = /nfs2/database/gencode_v29/gencode.v29.primary_assembly.annotation.gtf

[abundance_estimates_to_matrix]
perl = /usr/bin/perl
program = /nfs2/software/trinityrnaseq-Trinity-v2.8.4/util/abundance_estimates_to_matrix.pl
; RSEM|eXpress|kallisto|salmon  (needs to know what format to expect)
est_method = salmon
; TMM|UpperQuartile|none   (default: TMM)
cross_sample_norm = TMM
out_prefix = dynamic_value
quant_result = dynamic_value dynamic_value

[scallop]
scallop = /nfs2/software/bin/scallop
bam = dynamic_value
out_gtf = dynamic_value
# --library_type <first, second, unstranded>  library type of the sample, default: unstranded
library_type = unstranded
# --min_transcript_coverage <float>           minimum coverage required for a multi-exon transcript, default: 1.0
min_transcript_coverage = 1
# --min_single_exon_coverage <float>          minimum coverage required for a single-exon transcript, default: 20
min_single_exon_coverage = 20
# --min_transcript_length_increase <integer>  default: 50
min_transcript_length_increase = 50
; --min_transcript_length_base <integer>      default: 150, minimum length of a transcript would be
;                                             --min_transcript_length_base + --min_transcript_length_increase * num-of-exons
min_transcript_length_base = 150
; --min_mapping_quality <integer>             ignore reads with mapping quality less than this value, default: 1
min_mapping_quality = 1
; --max_num_cigar <integer>                   ignore reads with CIGAR size larger than this value, default: 7
max_num_cigar = 7
; --min_bundle_gap <integer>                  minimum distances required to start a new bundle, default: 50
min_bundle_gap = 50
; --min_num_hits_in_bundle <integer>          minimum number of reads required in a bundle, default: 20
min_num_hits_in_bundle = 20
; --min_flank_length <integer>                minimum match length in each side for a spliced read, default: 3
min_flank_length = 3
; --min_splice_bundary_hits <integer>         minimum number of spliced reads required for a junction, default: 1
min_splice_bundary_hits = 1

[merge_scallop_transcripts]
; gtfmerge and gtfcuff are from https://github.com/Kingsford-Group/rnaseqtools
python = /data/users/dqgu/anaconda3/bin/python
script = /data/users/dqgu/PycharmProjects/biodev/merge_scallop_transcripts.py
gtf = dynamic_value dynamic_value
refgtf = ${star_index:sjdbGTFfile}
refgenome = ${star_index:genomeFastaFiles}
outdir = dynamic_value
reftrans = ${salmon_index:transcript_fasta}
gtfmerge = /nfs2/software/bin/gtfmerge
gffcompare = /nfs2/software/bin/gffcompare
gtfcuff = /nfs2/software/bin/gtfcuff
gffread = /nfs2/software/bin/gffread

[diff_exp]
python = /data/users/dqgu/anaconda3/bin/python
script = /data/users/dqgu/PycharmProjects/biodev/diffexp_toolbox.py
count_matrix = dynamic_value
exp_matrix = dynamic_value
result_dir = dynamic_value
group_info = dynamic_value
comparison_info = dynamic_value
method =  DESeq2
threads = 2
gene_annot = /nfs2/database/gencode_v29/id_symbol_type.txt
# pvalue or padjust的阈值，用于判定是否差异显著
pvalue = 0.05
fc = 2
# padjust or pvalue
sig_type = padjust
# dispersion 仅针对edgeR在进行单样本比较时需要
dispersion = 0.16
plot = no

[goatools]
python = /data/users/dqgu/anaconda3/bin/python
script = /data/users/dqgu/PycharmProjects/biodev/go_enrichment.py
correct = fdr_bh
alpha = 0.05
top = 20
goea_out = dynamic_value
dag_out = dynamic_value
dpi = 300
geneid2symbol = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.ensembl.id2symbol.txt
obo = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/go-basic.obo
study = dynamic_value
population = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.gene.list
gene2go = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.ensembl.gene2go.txt
trans_population = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.transcript.list
trans_association = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.ensembl.trans2go.txt

[kegg_enrich]
python = /data/users/dqgu/anaconda3/bin/python
script = /data/users/dqgu/PycharmProjects/biodev/kegg_enrichment2.py
# diff.list with regulation info [gene down]
deg = dynamic_value
# gene mapping to k number in kegg
g2k = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.ensembl.gene2ko.txt
t2k = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.ensembl.trans2ko.txt
# http://www.kegg.jp/kegg-bin/get_htext?br08901, download htext
brite = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/br08901.keg
# gene mapping to path way
g2p = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.ensembl.gene2path.txt
t2p = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.ensembl.trans2path.txt
# ko gene mapping to enzyme
k2e = /nfs2/database/Human_gene_go_kegg_annot/NewAnnot/hsa.ensembl.gene2enzyme.txt
;k2p = /mnt/databases/Human_gene_go_kegg_annot/ko2pathway.txt
# draw n top term
dn = 50
outdir = dynamic_value
# 背景基因的个数，当只考虑用有pathway注释的基因作为背景基因时，将根据注释文件推断bgn
bgn = 0
only_consider_path_annotated_genes = yes

[gene_body_coverage]
script = geneBody_coverage.py
bam = dynamic_value,dynamic_value
;bed = /nfs2/database/RseQC_support/CRC_panel/hg38.capture_targets.gene.bed
bed = /nfs2/database/RseQC_support/hg38.HouseKeepingGenes.bed
min_mRNA_length = 200
image_format = pdf
out_prefix = dynamic_value

[inner_distance]
script = inner_distance.py
bam = dynamic_value
bed = /nfs2/database/RseQC_support/hg38_Gencode_V28.bed
;bed = /nfs2/database/RseQC_support/CRC_panel/hg38.capture_targets.gene.bed
min_mapping_quality = 30
out_prefix = dynamic_value
; Number of read-pairs used to estimate inner distance
sample_size = 1000000

[read_distribution]
script = read_distribution.py
bam = dynamic_value
bed = /nfs2/database/RseQC_support/hg38_Gencode_V28.bed
;bed = /nfs2/database/RseQC_support/CRC_panel/hg38.capture_targets.gene.bed
outfile = dynamic_value

[read_duplication]
script = read_duplication.py
bam = dynamic_value
min_mapping_quality = 30
out_prefix = dynamic_value

[rna_fragment_size]
script = RNA_fragment_size.py
bam = dynamic_value
bed = /nfs2/database/RseQC_support/hg38_Gencode_V28.bed
;bed = /nfs2/database/RseQC_support/hg38.capture_targets.gene.bed
min_mapping_quality = 30
outfile = dynamic_value

[rpkm_saturation]
script = RPKM_saturation.py
bam = dynamic_value
bed = /nfs2/database/RseQC_support/hg38_Gencode_V28.bed
;bed = /nfs2/database/RseQC_support/hg38.capture_targets.gene.bed
min_mapping_quality = 30
out_prefix = dynamic_value
;strand_rule. For example: --strand='1++,1--,2+-,2-+' means that this is
;a pair-end, strand-specific RNA-seq, and the strand
;rule is: read1 mapped to '+' => parental gene on '+';
;read1 mapped to '-' => parental gene on '-'; read2
;mapped to '+' => parental gene on '-'; read2 mapped to
;'-' => parental gene on '+'.  If you are not sure
;about the strand rule, run 'infer_experiment.py'
;default=none (Not a strand specific RNA-seq data)
strand_rule = none
rpkm_cutoff = 0.05

[tpm_saturation]
python = /data/users/dqgu/anaconda3/bin/python
script = /data/users/dqgu/PycharmProjects/biodev/TPMStaturation.py
bam = dynamic_value
annotation = ${star_index:sjdbGTFfile}
outdir = dynamic_value
step = 5
samtools = /nfs2/software/bin/samtools
# for plot, x > outlier_limit*median 的值定义为异常值
outlier_limit = 8
threads = 3
pool_size = 4
featureCounts = /nfs2/software/subread-1.6.3-Linux-x86_64/bin/featureCounts
paired = yes

[exp_analysis]
perl = /usr/bin/perl
trinity_ptr = /nfs2/software/trinityrnaseq-Trinity-v2.8.4/Analysis/DifferentialExpression/PtR
matrix = dynamic_value
out_prefix = dynamic_value
# 以下两个参数表示如何过滤：一个基因至少在min_gene_prevalence个样本中的表达大于min_gene_expr_val
min_gene_prevalence = 2
min_gene_expr_val = 0.5
# pearson, spearman
sample_cor = pearson
# generate a boxplot showing the log2 dist of counts where counts >= min fpkm
boxplot_log2_dist = 0.1

[get_alignment_summary]
python = /data/users/dqgu/anaconda3/bin/python
script = /data/users/dqgu/PycharmProjects/biodev/stat_target_region_from_bam_of_star.py
bam = dynamic_value
bed = /nfs2/database/RseQC_support/CRC_panel/OID46151_hg38_capture_targets.bed.sorted.merged.bed
rRNA_bed = /nfs2/database/RseQC_support/hg38_rRNA.bed
overlap = 0.05
rRNA_overlap = 0.6
bedtools = /nfs2/software/bin/bedtools
samtools = /nfs2/software/bin/samtools
outdir = dynamic_value
threads = 6
# cov_limit and step is used for target region base depth distribution stat
cov_limit = 5000
step = 50

[chromosome_read_distribution]
samtools = /nfs2/software/bin/samtools
bam = dynamic_value
outfile = dynamic_value

[CollectAlignmentSummaryMetrics]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
genome = ${star_index:genomeFastaFiles}
bam = dynamic_value
outfile = dynamic_value

[CollectInsertSizeMetrics]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
bam = dynamic_value
outfile = dynamic_value
outimage = dynamic_value
#  When generating the Histogram, discard any data categories (out of FR, TANDEM, RF) that
#  have fewer than this percentage of overall reads. (Range: 0 to 1)
min_percent = 0.1

[CollectTargetedPcrMetrics]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
genome = ${star_index:genomeFastaFiles}
bam = dynamic_value
outfile = dynamic_value
per_target_coverage_outfile = dynamic_value
amplicon_interval_list = /nfs2/database/Picard_support/WTS/25chrs.hg38.use_genecode_chrname.truseq-dna-exome-targeted-regions-manifest-v1-2.bed.InterList
targets_interval_list =  /nfs2/database/Picard_support/WTS/25chrs.hg38.use_genecode_chrname.truseq-dna-exome-targeted-regions-manifest-v1-2.bed.InterList
;amplicon_interval_list = /nfs2/database/Picard_support/CRC/primary_assembly.OID46151_hg38_primary_targets.bed.interval.list
;targets_interval_list = /nfs2/database/Picard_support/CRC/primary_assembly.OID46151_hg38_capture_targets.bed.interval.list

[CollectRnaSeqMetrics]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
bam = dynamic_value
outfile = dynamic_value
outimage = dynamic_value
;table refFlat
;The format consists in an eleven-column tab-delimited file, with one line per annotation
;(geneName, name, chrom, strand, txStart, txEnd, cdsStart, cdsEnd, exonCount, exonStarts, exonEnds).
;"A gene prediction with additional geneName field."
;    (
;    string  geneName;           "Name of gene as it appears in Genome Browser."
;    string  name;               "Name of gene"
;    string  chrom;              "Chromosome name"
;    char[1] strand;             "+ or - for strand"
;    uint    txStart;            "Transcription start position"
;    uint    txEnd;              "Transcription end position"
;    uint    cdsStart;           "Coding region start"
;    uint    cdsEnd;             "Coding region end"
;    uint    exonCount;          "Number of exons"
;    uint[exonCount] exonStarts; "Exon start positions"
;    uint[exonCount] exonEnds;   "Exon end positions"
;    )
ref_flat = /nfs2/database/Picard_support/new.hg38.refFlat.txt
strand = NONE
ribosomal_interval_list = /nfs2/database/Picard_support/25chrs.primary_assembly.hg38_rRNA.bed.interval.list

[FastqToSam]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
tool = FastqToSam
fq = dynamic_value
fq2 = dynamic_value
out = dynamic_value
sample_name = dynamic_value
PL = illumina
SEQUENCING_CENTER = illumina

[MergeBamAlignment]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
tool = MergeBamAlignment
ALIGNED = dynamic_value
UNMAPPED = dynamic_value
out = dynamic_value
genome_fasta = ${star_index:genomeFastaFiles}
INCLUDE_SECONDARY_ALIGNMENTS = false
VALIDATION_STRINGENCY = SILENT

[MarkDuplicates]
java = /usr/bin/java
picard = /nfs2/software/picard/2.18.0/picard.jar
tool = MarkDuplicates
input = dynamic
output = dynamic
metrics = dynamic
VALIDATION_STRINGENCY = SILENT
CREATE_INDEX = true

[SplitNCigarReads]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = SplitNCigarReads
input = dynamic_value
output = dynamic_value
genome_fasta = ${star_index:genomeFastaFiles}

[BaseRecalibrator]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = BaseRecalibrator
input = dynamic_value
output = dynamic_value
genome_fasta = ${star_index:genomeFastaFiles}
known_sites = /nfs2/database/1_human_reference/hg38/dbsnp_146.hg38.vcf.gz /nfs2/database/1_human_reference/hg38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz
use-original-qualities = true

[ApplyBQSR]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = ApplyBQSR
genome_fasta = ${star_index:genomeFastaFiles}
use-original-qualities = true
input = dynamic_value
output = dynamic_value
bqsr-recal-file = dynamic_value

[HaplotypeCaller]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = HaplotypeCaller
genome_fasta = ${star_index:genomeFastaFiles}
dont-use-soft-clipped-bases = true
standard-min-confidence-threshold-for-calling = 20
dbsnp = /nfs2/database/1_human_reference/hg38/dbsnp_146.hg38.vcf.gz
intervals = null
input = dynamic_value
output = dynamic_value

[VariantFiltration]
gatk = /nfs2/software/gatk-4.1.2.0/gatk
tool = VariantFiltration
genome_fasta = ${star_index:genomeFastaFiles}
cluster = 3
window = 35
vcf = dynamic_value
out = dynamic_value
# "Phred-scaled p-value using Fisher's exact test to detect strand bias": −10log10(p-value)
FS = FS >= 30.0
# "Variant Confidence/Quality by Depth"
QD = QD <= 2.0

[NormVCF]
bcftools = /nfs2/software/bcftools-1.7/bcftools
tool = norm
multiallelics = -both
fasta = ${star_index:genomeFastaFiles}
output = dynamic_value
input = dynamic_value

[annovar]
perl = /usr/bin/perl
annovar = /data/packages/annovar/ANNOVAR_2018.4.16/table_annovar.pl
input = dynamic_value
database_path = /nfs2/database/annovar/hg38_rna
buildver = hg38
outfile = dynamic_value
remove = yes
nastring = .
vcfinput = yes
polish = yes
# 获取基因注释，获取突变频率，获取功能对突变的影响，获取相应疾病信息
protocol = ensGene,avsnp150,1000g2015aug_all,esp6500siv2_all,exac03,dbnsfp35a,dbscsnv11,intervar_20180118,clinvar_20190305,cosmic70
operation = g,f,f,f,f,f,f,f,f,f
argument = '-hgvs,-hgvs,-hgvs,-hgvs,-hgvs,-hgvs,-hgvs,-hgvs,-hgvs,-hgvs'

[MapSplice]
python2 = /usr/bin/python
mapsplice = /nfs2/software/MapSplice-v2.2.1/mapsplice.py
# 自己从fa文件拆分出来的
chromosomes = /nfs2/database/gencode_v29/GRCh38.primary_assembly_chromosomes
# 使用mapsplice建立的索引
bowtie_index = /nfs2/database/gencode_v29/GRCh38.primary_assembly_chromosomes/bowtie_index/built_bowtie_index
gtf = /nfs2/database/gencode_v29/gencode.v29.primary_assembly.annotation.gtf
seglen = 25
min-map-len = 50
max-hits = 4
min-intron = 50
max-intron = 300000
# also search for non-canonical junctions in double anchor case, default: off
non-canonical-double-anchor = no
#also search for non-canonical junctions in single anchor case, default: off
non-canonical-single-anchor = no
threads = 6
# maximum insertion length, default: 6, must in range [0, 10]
max_insert = 6
# maximum deletion length, default: 6
max_deletion = 6
# also search for fusion junction, default: off
fusion = yes
# Minimum distance between two gapped segments to be considered as fusion candidate.
min-fusion-distance = 10000
out_bam = yes
outdir = dynamic_value
fq = dynamic_value
fq2 = dynamic_value

[NGSCheckMate]
python = /usr/bin/python2.7
script = /nfs2/software/NGSCheckMate/ncm_fastq.py
pattern_file = /nfs2/software/NGSCheckMate/SNP/SNP.pt
family_cutoff = no
nonzero = yes
threads = 10
subsampling_rate = 1
fastq_info = dynamic_input
out_name = dynamic_value
outdir = dynamic_value
